version: 1
name: example
groups:
  - name: Simple
    validate:
      - name: 'Simple: fail'
        type: simple
        args:
          - status: error
            message: Simple error
      - name: 'Simple: warning'
        type: simple
        args:
          - status: warning
            message: Simple warning
      - name: 'Simple: success'
        type: simple
        args:
          - status: success
            message: Simple success
      - name: 'Simple: wait for success'
        type: simple
        args:
          - status: success
            message: Simple success after 1 second
            sleep: 1s

  - name: Available HTTP resources
    validate:
      - name: google.com
        type: http
        args:
          - method: GET
            url: 'https://google.com'
            require:
              status:
                eq: 200
      - name: graph.facebook.com
        type: http
        args:
          - method: GET
            url: 'https://graph.facebook.com'
            timeout: 1s
      - name: api.github.com
        type: http
        args:
          - method: GET
            url: 'https://api.github.com'
            timeout: 1s
      - name: "healthy repo exists in GitHub"
        type: http
        args:
          - method: GET
            url: 'https://api.github.com/repos/spyzhov/healthy'
            timeout: 1s
            require:
              status:
                eq: 200
      - name: "healthy repo exists in Docker"
        type: http
        args:
          - method: GET
            url: 'https://hub.docker.com/v2/repositories/spyzhov/healthy/'
            timeout: 3s
            require:
              status:
                eq: 200
              content:
                type: JSON
      - name: '[worldtimeapi.org] odd sec'
        type: http
        args:
          - method: GET
            url: 'http://worldtimeapi.org/api/ip'
            require:
              status:
                eq: 200
              content:
                type: JSON
                JSON:
                  - jsonpath: '$.datetime'
                    match: [ '(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d[1,3,5,7,9]\.\d+\+\d{2}:\d{2})' ]

  - name: Not stable resources
    validate:
      - name: 'Retry: [worldtimeapi.org] odd sec'
        type: repeat
        args:
          - count: 5
            delay: 1s
            require:
              success: 3
              warning: 1
          - type: http
            args:
              - method: GET
                url: 'http://worldtimeapi.org/api/ip'
                require:
                  status:
                    eq: 200
                  content:
                    type: JSON
                    JSON:
                      - jsonpath: '$.datetime'
                        match: [ '(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d[1,3,5,7,9]\.\d+\+\d{2}:\d{2})' ]

  - name: Database
    validate:
      - name: 'Postgresql: healthy'
        type: sql
        args:
          - driver: postgres
            url: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"
            sql: 'SELECT 1'
            require:
              count:
                eq: 1
              rows:
                - [ 1 ]
              value:
                - row: 0
                  column: 0
                  numeric:
                    eq: 1
      - name: 'Postgresql: table `public.example` exists'
        type: sql
        args:
          - driver: postgres
            url: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"
            sql: "SELECT to_regclass('public.example');"
            require:
              count:
                eq: 1
              is_null: false

  - name: Other
    validate:
      - name: 'curl request'
        type: cmd
        args:
          - command: [ "curl", "http://google.com" ]
            require:
              exit_code:
                eq: 0
              output:
                type: HTML
                html:
                  - xpath: //title
                    match: [ '^301 Moved$' ]

frontend:
  script:
    content: ~
    files: [ ]
  style:
    content: ~
    files: [ ] # Example: ['https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/slate/bootstrap.min.css']
